#!/bin/bash
### BEGIN INIT INFO
# Provides:          wso2{{ WSO2ProductAlias }}
# Required-Start:    $local_fs $syslog $network $named
# Required-Stop:     $local_fs $syslog $network $named
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Start wso2{{ WSO2ProductAlias }} at startup
# Description: wso2{{ WSO2ProductAlias }} daemon script
### END INIT INFO
USER="{{ WSO2Owner }}"
PRODUCT_CODE="{{ WSO2ProductCode }}"
CARBON_HOME="{{ WSO2CarbonHome }}"
LOCK_FILE="${CARBON_HOME}/wso2carbon.lck"
PID_FILE="${CARBON_HOME}/wso2carbon.pid"
CMD="${CARBON_HOME}/bin/wso2server.sh"

export JAVA_HOME=$JAVA_HOME

. /lib/lsb/init-functions

# Status the service
status() {
 if [ -f $PID_FILE ]
 then
    PID=`cat $PID_FILE`
    ps -fp $PID > /dev/null 2>&1
    PIDVAL=$?
 else
    PIDVAL=3
 fi

 if [ $PIDVAL -eq 0 ]
 then
    log_success_msg "WSO2 $PRODUCT_CODE server is running ..."
 else
    log_warning_msg "WSO2 $PRODUCT_CODE server is stopped."
 fi
 return $PIDVAL
}

# Start the service
start() {
 if [ -f $PID_FILE ]
 then
    PID=`cat $PID_FILE`
    ps -fp $PID > /dev/null 2>&1
    PIDVAL=$?
 else
    PIDVAL=3
 fi

 if [ $PIDVAL -eq 0 ]
 then
    log_success_msg "WSO2 $PRODUCT_CODE server is running ..."
 else
    log_begin_msg "Starting WSO2 $PRODUCT_CODE server"
    touch $LOCK_FILE
    su - $USER -c "$CMD start > /dev/null 2>&1 &"
    sleep 5
    if [ -f $PID_FILE ]
    then
       PID=`cat $PID_FILE`
       ps -fp $PID > /dev/null 2>&1
       PIDVAL=$?
       log_end_msg $PIDVAL
    else
       log_end_msg 1
       PIDVAL=2
    fi
 fi
 return $PIDVAL
}

# Restart the service
restart() {
 log_begin_msg "Restarting WSO2 $PRODUCT_CODE server"
 touch $LOCK_FILE
 su - $USER -c "$CMD restart > /dev/null 2>&1 &"
 sleep 15
 if [ -f $PID_FILE ]
 then
    PID=`cat $PID_FILE`
    ps -fp $PID > /dev/null 2>&1
    PIDVAL=$?
    log_end_msg $PIDVAL
 else
    log_end_msg 1
    PIDVAL=2
 fi
 return $PIDVAL
}

# Stop the service
stop() {
 if [ -f $PID_FILE ]
 then
    PID=`cat $PID_FILE`
    ps -fp $PID > /dev/null 2>&1
    PIDVAL=$?
    if [ $PIDVAL -eq 0 ]
    then
       log_begin_msg "Stopping WSO2 $PRODUCT_CODE server"
       su - $USER -c "$CMD stop > /dev/null 2>&1 &"
       rm -f $LOCK_FILE
       sleep 10
       PID=`cat $PID_FILE`
       ps -fp $PID > /dev/null 2>&1
       PIDVAL=$?
       if [ $PIDVAL -eq 0 ]
       then
          log_end_msg 1
          PIDVAL=2
       else
          log_end_msg 0
          PIDVAL=0
       fi
    else
       log_warning_msg "WSO2 $PRODUCT_CODE server is not running."
       PIDVAL=0
    fi
 else
    log_warning_msg "WSO2 $PRODUCT_CODE server is not running."
    PIDVAL=0
 fi
 return $PIDVAL
}

### main logic ###
case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
status)
    status
    ;;
restart|reload|force-reload)
    restart
    ;;
*)
   echo $"Usage: $0 {start|stop|restart|status}"
   exit 1
esac
exit $?