--- 
#---------------------------------------------# 
# MConnect - Centrul de Guvernare Electronica #
#---------------------------------------------#

# Clean previous installation, if any

- name: Stop any resident services
  shell: pkill --euid {{ WSO2Owner }} --signal SIGKILL
  ignore_errors: yes

- name: Remove product folder
  file: path={{ WSO2VersionHome }} state=absent force=yes
  ignore_errors: yes

- name: Remove symlink
  file: path={{ WSO2CarbonHome }} state=absent force=yes
  ignore_errors: yes

- name: Disable service automatic startup
  service: name={{ WSO2Service }} enabled=no
  ignore_errors: yes

- name: Remove startup service
  file: path=/etc/init.d/{{ WSO2Service }} state=absent force=yes
  ignore_errors: yes

# Install product

- name: Create product directory
  file: path={{ WSO2ProductHome }} owner={{ WSO2Owner }} group={{ WSO2Group }} state=directory

- name: Download product
  get_url: url=http://dist.wso2.org/products/{{ WSO2ProductUrlName }}/{{ WSO2ProductVersion }}/wso2dss-{{ WSO2ProductVersion }}.zip dest={{ WSO2FileRepository }}
    
- name: Unzip product
  unarchive: src={{ WSO2FileRepository }}wso2dss-{{ WSO2ProductVersion }}.zip dest={{ WSO2ProductHome }} copy=yes
    
- name: Create symbolic link
  file: src={{ WSO2VersionHome }} dest={{ WSO2CarbonHome }} owner={{ WSO2Owner }} group={{ WSO2Group }} state=link force=yes
  
- name: Copy Oracle Server OJDBC driver
  copy: src=ojdbc7.jar dest={{ WSO2CarbonHome }}/repository/components/lib/  owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755
  when: driver is undefined or driver == 'oracle'
    
- name: Copy MySQL OJDBC driver
  copy: src=mysql-connector-java-5.1.38-bin.jar dest={{ WSO2CarbonHome }}/repository/components/lib/  owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755
  when: driver is undefined or driver == 'mysql'
    
- name: Copy Microsoft SQL OJDBC driver
  copy: src=sqljdbc42.jar dest={{ WSO2CarbonHome }}/repository/components/lib/  owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755
  when: driver is undefined or driver == 'mssql'

# Configure product

- name: Configure start script
  template: src=bin/wso2server.sh.j2 dest={{ WSO2CarbonHome }}/bin/wso2server.sh owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755

- name: Configure carbon
  template: src=conf/carbon.xml.j2 dest={{ WSO2CarbonHome }}/repository/conf/carbon.xml owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755

- name: Configure tomcat catalina server
  template: src=conf/tomcat/catalina-server.xml.j2 dest={{ WSO2CarbonHome }}/repository/conf/tomcat/catalina-server.xml owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755

# Install product patches
 
- include: ../../common/tasks/patch.yml

# Configure certificates

- name: Apply our keystore
  copy: src={{ WSO2FileRepository }}wso2carbon.jks dest={{ WSO2CarbonHome }}/repository/resources/security/ owner={{ WSO2Owner }} group={{ WSO2Group }} mode=0755

- name: Import certificate into client truststores
  command: 'keytool -import -alias "{{ HostName }}"  -file "{{ WSO2FileRepository }}{{ HostName }}.crt" -keystore "{{ WSO2CarbonHome }}/repository/resources/security/client-truststore.jks"'

# Fix file ownership

- name: Change WSO2 installation directory ownership
  file: path={{ WSO2Folder }} owner={{ WSO2Owner }} group={{ WSO2Group }} recurse=yes

# Configure for startup

- name: Create startup service
  template: src=etc/init.d/wso2server.j2 dest=/etc/init.d/{{ WSO2Service }} owner=root group=root mode=0755
    
- name: Ensure service is enabled for startup
  service: name={{ WSO2Service }} enabled=yes

# Run product for setup

- name: Start WSO2 instance first time with -Dsetup
  service: name={{ WSO2Service }} state=started
  environment:
    JAVA_OPTS: "-Dsetup"
    
- name: Wait for WSO2 to start for the first time
  wait_for: path={{ WSO2CarbonHome }}/repository/logs/wso2carbon.log search_regex=org.wso2.carbon.ui.internal.CarbonUIServiceComponent
    
- name: Stop WSO2 setup
  service: name={{ WSO2Service }} state=stopped
    
- name: Wait for WSO2 setup to completely stop
  wait_for: path={{ WSO2CarbonHome }}/repository/logs/wso2carbon.log search_regex=Halting

# Start product as a service

- name: Start service
  service: name={{ WSO2Service }} state=started
